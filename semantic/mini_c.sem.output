Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier VariableList Semicolon
    5       | Specifier FuncDec Semicolon
    6       | Specifier FuncDec StmtBlk
    7       | error Semicolon

    8 Specifier: IdentifierType
    9          | AsArray ParLeft LiteralInteger ParRight Specifier
   10          | AsPointer Specifier

   11 VariableList: VarDec
   12             | VarDec OperatorAssign Exp
   13             | VarDec Comma VariableList
   14             | VarDec OperatorAssign Exp Comma VariableList

   15 VarDec: Identifier

   16 FuncDec: Identifier ParLeft ParamList ParRight
   17        | Identifier ParLeft ParRight

   18 ParamList: ParamDec
   19          | ParamDec Comma ParamList

   20 ParamDec: Specifier VarDec

   21 StmtBlk: BlockLeft StmList BlockRight

   22 StmList: %empty
   23        | Stmt StmList
   24        | Def StmList

   25 Stmt: Exp Semicolon
   26     | StmtBlk
   27     | LoopBreak Semicolon
   28     | LoopContinue Semicolon
   29     | Return Exp Semicolon
   30     | CondIf ParLeft Exp ParRight Stmt
   31     | CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   32     | LoopWhile ParLeft Exp ParRight Stmt

   33 Def: Specifier VariableList Semicolon

   34 InitList: Exp Comma InitList
   35         | Exp

   36 Exp: Exp OperatorAssign Exp
   37    | Exp OperatorAnd Exp
   38    | Exp OperatorOr Exp
   39    | Exp OperatorRelation Exp
   40    | Exp OperatorPlus Exp
   41    | Exp OperatorMinus Exp
   42    | Exp OperatorMul Exp
   43    | Exp OperatorDiv Exp
   44    | ParLeft Exp ParRight
   45    | OperatorMinus Exp
   46    | OperatorNot Exp
   47    | OperatorDeref ParLeft Exp ParRight
   48    | OperatorAddr ParLeft Exp ParRight
   49    | Exp OperatorMember Identifier
   50    | Exp OperatorAccessL Exp OperatorAccessR
   51    | Exp ParLeft Args ParRight
   52    | Exp ParLeft ParRight
   53    | OperatorAccessL InitList OperatorAccessR
   54    | Identifier
   55    | LiteralInteger
   56    | LiteralFloat
   57    | LiteralString
   58    | LiteralChar
   59    | LiteralNullptr

   60 Args: Exp Comma Args
   61     | Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 7
LiteralInteger <literal_int> (258) 9 55
Identifier <identifier> (259) 15 16 17 49 54
OperatorRelation <identifier> (260) 39
IdentifierType <identifier> (261) 8
LiteralFloat <literal_float> (262) 56
LiteralString <literal_string> (263) 57
LiteralChar <literal_string> (264) 58
LiteralNullptr <identifier> (265) 59
ParLeft (266) 9 16 17 30 31 32 44 47 48 51 52
ParRight (267) 9 16 17 30 31 32 44 47 48 51 52
BlockLeft (268) 21
BlockRight (269) 21
Semicolon (270) 4 5 7 25 27 28 29 33
Comma (271) 13 14 19 34 60
OperatorPlus (272) 40
OperatorMinus (273) 41 45
OperatorMul (274) 42
OperatorDiv (275) 43
OperatorAssign (276) 12 14 36
OperatorAnd (277) 37
OperatorOr (278) 38
OperatorNot (279) 46
CondIf (280) 30 31
CondElse (281) 31
LoopWhile (282) 32
Return (283) 29
OperatorAddr (284) 48
OperatorDeref (285) 47
OperatorMember (286) 49
OperatorAccessL (287) 50 53
OperatorAccessR (288) 50 53
AsArray (289) 9
AsPointer (290) 10
LoopBreak (291) 27
LoopContinue (292) 28
InitializerList (293)
OperatorAccess (294)
OperatorUnaryMinus (295)
CondIfTrue (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program <astnode> (43)
    on left: 1, on right: 0
ExtDefList <astnode> (44)
    on left: 2 3, on right: 1 3
ExtDef <astnode> (45)
    on left: 4 5 6 7, on right: 3
Specifier <astnode> (46)
    on left: 8 9 10, on right: 4 5 6 9 10 20 33
VariableList <astnode> (47)
    on left: 11 12 13 14, on right: 4 13 14 33
VarDec <astnode> (48)
    on left: 15, on right: 11 12 13 14 20
FuncDec <astnode> (49)
    on left: 16 17, on right: 5 6
ParamList <astnode> (50)
    on left: 18 19, on right: 16 19
ParamDec <astnode> (51)
    on left: 20, on right: 18 19
StmtBlk <astnode> (52)
    on left: 21, on right: 6 26
StmList <astnode> (53)
    on left: 22 23 24, on right: 21 23 24
Stmt <astnode> (54)
    on left: 25 26 27 28 29 30 31 32, on right: 23 30 31 32
Def <astnode> (55)
    on left: 33, on right: 24
InitList <astnode> (56)
    on left: 34 35, on right: 34 53
Exp <astnode> (57)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59, on right: 12 14 25 29 30 31 32 34 35 36 37 38
    39 40 41 42 43 44 45 46 47 48 49 50 51 52 60 61
Args <astnode> (58)
    on left: 60 61, on right: 51 60


State 0

    0 $accept: . program $end
    1 program: . ExtDefList
    2 ExtDefList: . %empty  [$end]
    3           | . ExtDef ExtDefList
    4 ExtDef: . Specifier VariableList Semicolon
    5       | . Specifier FuncDec Semicolon
    6       | . Specifier FuncDec StmtBlk
    7       | . error Semicolon
    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier

    error           shift, and go to state 1
    IdentifierType  shift, and go to state 2
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 5
    ExtDefList  go to state 6
    ExtDef      go to state 7
    Specifier   go to state 8


State 1

    7 ExtDef: error . Semicolon

    Semicolon  shift, and go to state 9


State 2

    8 Specifier: IdentifierType .

    $default  reduce using rule 8 (Specifier)


State 3

    9 Specifier: AsArray . ParLeft LiteralInteger ParRight Specifier

    ParLeft  shift, and go to state 10


State 4

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   10          | AsPointer . Specifier

    IdentifierType  shift, and go to state 2
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    Specifier  go to state 11


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


State 7

    2 ExtDefList: . %empty  [$end]
    3           | . ExtDef ExtDefList
    3           | ExtDef . ExtDefList
    4 ExtDef: . Specifier VariableList Semicolon
    5       | . Specifier FuncDec Semicolon
    6       | . Specifier FuncDec StmtBlk
    7       | . error Semicolon
    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier

    error           shift, and go to state 1
    IdentifierType  shift, and go to state 2
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 13
    ExtDef      go to state 7
    Specifier   go to state 8


State 8

    4 ExtDef: Specifier . VariableList Semicolon
    5       | Specifier . FuncDec Semicolon
    6       | Specifier . FuncDec StmtBlk
   11 VariableList: . VarDec
   12             | . VarDec OperatorAssign Exp
   13             | . VarDec Comma VariableList
   14             | . VarDec OperatorAssign Exp Comma VariableList
   15 VarDec: . Identifier
   16 FuncDec: . Identifier ParLeft ParamList ParRight
   17        | . Identifier ParLeft ParRight

    Identifier  shift, and go to state 14

    VariableList  go to state 15
    VarDec        go to state 16
    FuncDec       go to state 17


State 9

    7 ExtDef: error Semicolon .

    $default  reduce using rule 7 (ExtDef)


State 10

    9 Specifier: AsArray ParLeft . LiteralInteger ParRight Specifier

    LiteralInteger  shift, and go to state 18


State 11

   10 Specifier: AsPointer Specifier .

    $default  reduce using rule 10 (Specifier)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 14

   15 VarDec: Identifier .  [Semicolon, Comma, OperatorAssign]
   16 FuncDec: Identifier . ParLeft ParamList ParRight
   17        | Identifier . ParLeft ParRight

    ParLeft  shift, and go to state 19

    $default  reduce using rule 15 (VarDec)


State 15

    4 ExtDef: Specifier VariableList . Semicolon

    Semicolon  shift, and go to state 20


State 16

   11 VariableList: VarDec .  [Semicolon]
   12             | VarDec . OperatorAssign Exp
   13             | VarDec . Comma VariableList
   14             | VarDec . OperatorAssign Exp Comma VariableList

    Comma           shift, and go to state 21
    OperatorAssign  shift, and go to state 22

    $default  reduce using rule 11 (VariableList)


State 17

    5 ExtDef: Specifier FuncDec . Semicolon
    6       | Specifier FuncDec . StmtBlk
   21 StmtBlk: . BlockLeft StmList BlockRight

    BlockLeft  shift, and go to state 23
    Semicolon  shift, and go to state 24

    StmtBlk  go to state 25


State 18

    9 Specifier: AsArray ParLeft LiteralInteger . ParRight Specifier

    ParRight  shift, and go to state 26


State 19

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   16 FuncDec: Identifier ParLeft . ParamList ParRight
   17        | Identifier ParLeft . ParRight
   18 ParamList: . ParamDec
   19          | . ParamDec Comma ParamList
   20 ParamDec: . Specifier VarDec

    IdentifierType  shift, and go to state 2
    ParRight        shift, and go to state 27
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    Specifier  go to state 28
    ParamList  go to state 29
    ParamDec   go to state 30


State 20

    4 ExtDef: Specifier VariableList Semicolon .

    $default  reduce using rule 4 (ExtDef)


State 21

   11 VariableList: . VarDec
   12             | . VarDec OperatorAssign Exp
   13             | . VarDec Comma VariableList
   13             | VarDec Comma . VariableList
   14             | . VarDec OperatorAssign Exp Comma VariableList
   15 VarDec: . Identifier

    Identifier  shift, and go to state 31

    VariableList  go to state 32
    VarDec        go to state 16


State 22

   12 VariableList: VarDec OperatorAssign . Exp
   14             | VarDec OperatorAssign . Exp Comma VariableList
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 45


State 23

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   21 StmtBlk: . BlockLeft StmList BlockRight
   21        | BlockLeft . StmList BlockRight
   22 StmList: . %empty  [BlockRight]
   23        | . Stmt StmList
   24        | . Def StmList
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   33 Def: . Specifier VariableList Semicolon
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    IdentifierType   shift, and go to state 2
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    AsArray          shift, and go to state 3
    AsPointer        shift, and go to state 4
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    $default  reduce using rule 22 (StmList)

    Specifier  go to state 51
    StmtBlk    go to state 52
    StmList    go to state 53
    Stmt       go to state 54
    Def        go to state 55
    Exp        go to state 56


State 24

    5 ExtDef: Specifier FuncDec Semicolon .

    $default  reduce using rule 5 (ExtDef)


State 25

    6 ExtDef: Specifier FuncDec StmtBlk .

    $default  reduce using rule 6 (ExtDef)


State 26

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
    9          | AsArray ParLeft LiteralInteger ParRight . Specifier
   10          | . AsPointer Specifier

    IdentifierType  shift, and go to state 2
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    Specifier  go to state 57


State 27

   17 FuncDec: Identifier ParLeft ParRight .

    $default  reduce using rule 17 (FuncDec)


State 28

   15 VarDec: . Identifier
   20 ParamDec: Specifier . VarDec

    Identifier  shift, and go to state 31

    VarDec  go to state 58


State 29

   16 FuncDec: Identifier ParLeft ParamList . ParRight

    ParRight  shift, and go to state 59


State 30

   18 ParamList: ParamDec .  [ParRight]
   19          | ParamDec . Comma ParamList

    Comma  shift, and go to state 60

    $default  reduce using rule 18 (ParamList)


State 31

   15 VarDec: Identifier .

    $default  reduce using rule 15 (VarDec)


State 32

   13 VariableList: VarDec Comma VariableList .

    $default  reduce using rule 13 (VariableList)


State 33

   55 Exp: LiteralInteger .

    $default  reduce using rule 55 (Exp)


State 34

   54 Exp: Identifier .

    $default  reduce using rule 54 (Exp)


State 35

   56 Exp: LiteralFloat .

    $default  reduce using rule 56 (Exp)


State 36

   57 Exp: LiteralString .

    $default  reduce using rule 57 (Exp)


State 37

   58 Exp: LiteralChar .

    $default  reduce using rule 58 (Exp)


State 38

   59 Exp: LiteralNullptr .

    $default  reduce using rule 59 (Exp)


State 39

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   44    | ParLeft . Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 61


State 40

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   45    | OperatorMinus . Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 62


State 41

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   46    | OperatorNot . Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 63


State 42

   48 Exp: OperatorAddr . ParLeft Exp ParRight

    ParLeft  shift, and go to state 64


State 43

   47 Exp: OperatorDeref . ParLeft Exp ParRight

    ParLeft  shift, and go to state 65


State 44

   34 InitList: . Exp Comma InitList
   35         | . Exp
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   53    | OperatorAccessL . InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    InitList  go to state 66
    Exp       go to state 67


State 45

   12 VariableList: VarDec OperatorAssign Exp .  [Semicolon]
   14             | VarDec OperatorAssign Exp . Comma VariableList
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    Comma             shift, and go to state 70
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 12 (VariableList)


State 46

   30 Stmt: CondIf . ParLeft Exp ParRight Stmt
   31     | CondIf . ParLeft Exp ParRight Stmt CondElse Stmt

    ParLeft  shift, and go to state 80


State 47

   32 Stmt: LoopWhile . ParLeft Exp ParRight Stmt

    ParLeft  shift, and go to state 81


State 48

   29 Stmt: Return . Exp Semicolon
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 82


State 49

   27 Stmt: LoopBreak . Semicolon

    Semicolon  shift, and go to state 83


State 50

   28 Stmt: LoopContinue . Semicolon

    Semicolon  shift, and go to state 84


State 51

   11 VariableList: . VarDec
   12             | . VarDec OperatorAssign Exp
   13             | . VarDec Comma VariableList
   14             | . VarDec OperatorAssign Exp Comma VariableList
   15 VarDec: . Identifier
   33 Def: Specifier . VariableList Semicolon

    Identifier  shift, and go to state 31

    VariableList  go to state 85
    VarDec        go to state 16


State 52

   26 Stmt: StmtBlk .

    $default  reduce using rule 26 (Stmt)


State 53

   21 StmtBlk: BlockLeft StmList . BlockRight

    BlockRight  shift, and go to state 86


State 54

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   21 StmtBlk: . BlockLeft StmList BlockRight
   22 StmList: . %empty  [BlockRight]
   23        | . Stmt StmList
   23        | Stmt . StmList
   24        | . Def StmList
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   33 Def: . Specifier VariableList Semicolon
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    IdentifierType   shift, and go to state 2
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    AsArray          shift, and go to state 3
    AsPointer        shift, and go to state 4
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    $default  reduce using rule 22 (StmList)

    Specifier  go to state 51
    StmtBlk    go to state 52
    StmList    go to state 87
    Stmt       go to state 54
    Def        go to state 55
    Exp        go to state 56


State 55

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   21 StmtBlk: . BlockLeft StmList BlockRight
   22 StmList: . %empty  [BlockRight]
   23        | . Stmt StmList
   24        | . Def StmList
   24        | Def . StmList
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   33 Def: . Specifier VariableList Semicolon
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    IdentifierType   shift, and go to state 2
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    AsArray          shift, and go to state 3
    AsPointer        shift, and go to state 4
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    $default  reduce using rule 22 (StmList)

    Specifier  go to state 51
    StmtBlk    go to state 52
    StmList    go to state 88
    Stmt       go to state 54
    Def        go to state 55
    Exp        go to state 56


State 56

   25 Stmt: Exp . Semicolon
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    Semicolon         shift, and go to state 89
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 57

    9 Specifier: AsArray ParLeft LiteralInteger ParRight Specifier .

    $default  reduce using rule 9 (Specifier)


State 58

   20 ParamDec: Specifier VarDec .

    $default  reduce using rule 20 (ParamDec)


State 59

   16 FuncDec: Identifier ParLeft ParamList ParRight .

    $default  reduce using rule 16 (FuncDec)


State 60

    8 Specifier: . IdentifierType
    9          | . AsArray ParLeft LiteralInteger ParRight Specifier
   10          | . AsPointer Specifier
   18 ParamList: . ParamDec
   19          | . ParamDec Comma ParamList
   19          | ParamDec Comma . ParamList
   20 ParamDec: . Specifier VarDec

    IdentifierType  shift, and go to state 2
    AsArray         shift, and go to state 3
    AsPointer       shift, and go to state 4

    Specifier  go to state 28
    ParamList  go to state 90
    ParamDec   go to state 30


State 61

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   44    | ParLeft Exp . ParRight
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    ParRight          shift, and go to state 91
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 62

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   45    | OperatorMinus Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorMul, OperatorDiv, OperatorAssign, OperatorAnd, OperatorOr, OperatorMember, OperatorAccessL, OperatorAccessR]
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    $default  reduce using rule 45 (Exp)

    Conflict between rule 45 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorUnaryMinus).
    Conflict between rule 45 and token ParLeft resolved as reduce (ParLeft < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorPlus resolved as reduce (OperatorPlus < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorMinus resolved as reduce (OperatorMinus < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorMul resolved as reduce (OperatorMul < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorDiv resolved as reduce (OperatorDiv < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorOr resolved as reduce (OperatorOr < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorMember resolved as reduce (OperatorMember < OperatorUnaryMinus).
    Conflict between rule 45 and token OperatorAccessL resolved as reduce (OperatorAccessL < OperatorUnaryMinus).


State 63

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   46    | OperatorNot Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorMul, OperatorDiv, OperatorAssign, OperatorAnd, OperatorOr, OperatorMember, OperatorAccessL, OperatorAccessR]
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    $default  reduce using rule 46 (Exp)

    Conflict between rule 46 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorNot).
    Conflict between rule 46 and token ParLeft resolved as reduce (ParLeft < OperatorNot).
    Conflict between rule 46 and token OperatorPlus resolved as reduce (OperatorPlus < OperatorNot).
    Conflict between rule 46 and token OperatorMinus resolved as reduce (OperatorMinus < OperatorNot).
    Conflict between rule 46 and token OperatorMul resolved as reduce (OperatorMul < OperatorNot).
    Conflict between rule 46 and token OperatorDiv resolved as reduce (OperatorDiv < OperatorNot).
    Conflict between rule 46 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorNot).
    Conflict between rule 46 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorNot).
    Conflict between rule 46 and token OperatorOr resolved as reduce (OperatorOr < OperatorNot).
    Conflict between rule 46 and token OperatorMember resolved as reduce (OperatorMember < OperatorNot).
    Conflict between rule 46 and token OperatorAccessL resolved as reduce (OperatorAccessL < OperatorNot).


State 64

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   48    | OperatorAddr ParLeft . Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 92


State 65

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   47    | OperatorDeref ParLeft . Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 93


State 66

   53 Exp: OperatorAccessL InitList . OperatorAccessR

    OperatorAccessR  shift, and go to state 94


State 67

   34 InitList: Exp . Comma InitList
   35         | Exp .  [OperatorAccessR]
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    Comma             shift, and go to state 95
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 35 (InitList)


State 68

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   39    | Exp OperatorRelation . Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 96


State 69

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   51    | Exp ParLeft . Args ParRight
   52    | . Exp ParLeft ParRight
   52    | Exp ParLeft . ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr
   60 Args: . Exp Comma Args
   61     | . Exp

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    ParRight         shift, and go to state 97
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp   go to state 98
    Args  go to state 99


State 70

   11 VariableList: . VarDec
   12             | . VarDec OperatorAssign Exp
   13             | . VarDec Comma VariableList
   14             | . VarDec OperatorAssign Exp Comma VariableList
   14             | VarDec OperatorAssign Exp Comma . VariableList
   15 VarDec: . Identifier

    Identifier  shift, and go to state 31

    VariableList  go to state 100
    VarDec        go to state 16


State 71

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   40    | Exp OperatorPlus . Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 101


State 72

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   41    | Exp OperatorMinus . Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 102


State 73

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   42    | Exp OperatorMul . Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 103


State 74

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   43    | Exp OperatorDiv . Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 104


State 75

   36 Exp: . Exp OperatorAssign Exp
   36    | Exp OperatorAssign . Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 105


State 76

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   37    | Exp OperatorAnd . Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 106


State 77

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   38    | Exp OperatorOr . Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 107


State 78

   49 Exp: Exp OperatorMember . Identifier

    Identifier  shift, and go to state 108


State 79

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   50    | Exp OperatorAccessL . Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 109


State 80

   30 Stmt: CondIf ParLeft . Exp ParRight Stmt
   31     | CondIf ParLeft . Exp ParRight Stmt CondElse Stmt
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 110


State 81

   32 Stmt: LoopWhile ParLeft . Exp ParRight Stmt
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp  go to state 111


State 82

   29 Stmt: Return Exp . Semicolon
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    Semicolon         shift, and go to state 112
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 83

   27 Stmt: LoopBreak Semicolon .

    $default  reduce using rule 27 (Stmt)


State 84

   28 Stmt: LoopContinue Semicolon .

    $default  reduce using rule 28 (Stmt)


State 85

   33 Def: Specifier VariableList . Semicolon

    Semicolon  shift, and go to state 113


State 86

   21 StmtBlk: BlockLeft StmList BlockRight .

    $default  reduce using rule 21 (StmtBlk)


State 87

   23 StmList: Stmt StmList .

    $default  reduce using rule 23 (StmList)


State 88

   24 StmList: Def StmList .

    $default  reduce using rule 24 (StmList)


State 89

   25 Stmt: Exp Semicolon .

    $default  reduce using rule 25 (Stmt)


State 90

   19 ParamList: ParamDec Comma ParamList .

    $default  reduce using rule 19 (ParamList)


State 91

   44 Exp: ParLeft Exp ParRight .

    $default  reduce using rule 44 (Exp)


State 92

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   48    | OperatorAddr ParLeft Exp . ParRight
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    ParRight          shift, and go to state 114
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 93

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   47    | OperatorDeref ParLeft Exp . ParRight
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    ParRight          shift, and go to state 115
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 94

   53 Exp: OperatorAccessL InitList OperatorAccessR .

    $default  reduce using rule 53 (Exp)


State 95

   34 InitList: . Exp Comma InitList
   34         | Exp Comma . InitList
   35         | . Exp
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    InitList  go to state 116
    Exp       go to state 67


State 96

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   39    | Exp OperatorRelation Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorPlus     shift, and go to state 71
    OperatorMinus    shift, and go to state 72
    OperatorMul      shift, and go to state 73
    OperatorDiv      shift, and go to state 74
    OperatorMember   shift, and go to state 78
    OperatorAccessL  shift, and go to state 79

    $default  reduce using rule 39 (Exp)

    Conflict between rule 39 and token OperatorRelation resolved as reduce (%left OperatorRelation).
    Conflict between rule 39 and token ParLeft resolved as reduce (ParLeft < OperatorRelation).
    Conflict between rule 39 and token OperatorPlus resolved as shift (OperatorRelation < OperatorPlus).
    Conflict between rule 39 and token OperatorMinus resolved as shift (OperatorRelation < OperatorMinus).
    Conflict between rule 39 and token OperatorMul resolved as shift (OperatorRelation < OperatorMul).
    Conflict between rule 39 and token OperatorDiv resolved as shift (OperatorRelation < OperatorDiv).
    Conflict between rule 39 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorRelation).
    Conflict between rule 39 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorRelation).
    Conflict between rule 39 and token OperatorOr resolved as reduce (OperatorOr < OperatorRelation).
    Conflict between rule 39 and token OperatorMember resolved as shift (OperatorRelation < OperatorMember).
    Conflict between rule 39 and token OperatorAccessL resolved as shift (OperatorRelation < OperatorAccessL).


State 97

   52 Exp: Exp ParLeft ParRight .

    $default  reduce using rule 52 (Exp)


State 98

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight
   60 Args: Exp . Comma Args
   61     | Exp .  [ParRight]

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    Comma             shift, and go to state 117
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 61 (Args)


State 99

   51 Exp: Exp ParLeft Args . ParRight

    ParRight  shift, and go to state 118


State 100

   14 VariableList: VarDec OperatorAssign Exp Comma VariableList .

    $default  reduce using rule 14 (VariableList)


State 101

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   40    | Exp OperatorPlus Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorMul      shift, and go to state 73
    OperatorDiv      shift, and go to state 74
    OperatorMember   shift, and go to state 78
    OperatorAccessL  shift, and go to state 79

    $default  reduce using rule 40 (Exp)

    Conflict between rule 40 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorPlus).
    Conflict between rule 40 and token ParLeft resolved as reduce (ParLeft < OperatorPlus).
    Conflict between rule 40 and token OperatorPlus resolved as reduce (%left OperatorPlus).
    Conflict between rule 40 and token OperatorMinus resolved as reduce (%left OperatorMinus).
    Conflict between rule 40 and token OperatorMul resolved as shift (OperatorPlus < OperatorMul).
    Conflict between rule 40 and token OperatorDiv resolved as shift (OperatorPlus < OperatorDiv).
    Conflict between rule 40 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorPlus).
    Conflict between rule 40 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorPlus).
    Conflict between rule 40 and token OperatorOr resolved as reduce (OperatorOr < OperatorPlus).
    Conflict between rule 40 and token OperatorMember resolved as shift (OperatorPlus < OperatorMember).
    Conflict between rule 40 and token OperatorAccessL resolved as shift (OperatorPlus < OperatorAccessL).


State 102

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   41    | Exp OperatorMinus Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorMul      shift, and go to state 73
    OperatorDiv      shift, and go to state 74
    OperatorMember   shift, and go to state 78
    OperatorAccessL  shift, and go to state 79

    $default  reduce using rule 41 (Exp)

    Conflict between rule 41 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorMinus).
    Conflict between rule 41 and token ParLeft resolved as reduce (ParLeft < OperatorMinus).
    Conflict between rule 41 and token OperatorPlus resolved as reduce (%left OperatorPlus).
    Conflict between rule 41 and token OperatorMinus resolved as reduce (%left OperatorMinus).
    Conflict between rule 41 and token OperatorMul resolved as shift (OperatorMinus < OperatorMul).
    Conflict between rule 41 and token OperatorDiv resolved as shift (OperatorMinus < OperatorDiv).
    Conflict between rule 41 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorMinus).
    Conflict between rule 41 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorMinus).
    Conflict between rule 41 and token OperatorOr resolved as reduce (OperatorOr < OperatorMinus).
    Conflict between rule 41 and token OperatorMember resolved as shift (OperatorMinus < OperatorMember).
    Conflict between rule 41 and token OperatorAccessL resolved as shift (OperatorMinus < OperatorAccessL).


State 103

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   42    | Exp OperatorMul Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorMul, OperatorDiv, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorMember   shift, and go to state 78
    OperatorAccessL  shift, and go to state 79

    $default  reduce using rule 42 (Exp)

    Conflict between rule 42 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorMul).
    Conflict between rule 42 and token ParLeft resolved as reduce (ParLeft < OperatorMul).
    Conflict between rule 42 and token OperatorPlus resolved as reduce (OperatorPlus < OperatorMul).
    Conflict between rule 42 and token OperatorMinus resolved as reduce (OperatorMinus < OperatorMul).
    Conflict between rule 42 and token OperatorMul resolved as reduce (%left OperatorMul).
    Conflict between rule 42 and token OperatorDiv resolved as reduce (%left OperatorDiv).
    Conflict between rule 42 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorMul).
    Conflict between rule 42 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorMul).
    Conflict between rule 42 and token OperatorOr resolved as reduce (OperatorOr < OperatorMul).
    Conflict between rule 42 and token OperatorMember resolved as shift (OperatorMul < OperatorMember).
    Conflict between rule 42 and token OperatorAccessL resolved as shift (OperatorMul < OperatorAccessL).


State 104

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   43    | Exp OperatorDiv Exp .  [OperatorRelation, ParLeft, ParRight, Semicolon, Comma, OperatorPlus, OperatorMinus, OperatorMul, OperatorDiv, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorMember   shift, and go to state 78
    OperatorAccessL  shift, and go to state 79

    $default  reduce using rule 43 (Exp)

    Conflict between rule 43 and token OperatorRelation resolved as reduce (OperatorRelation < OperatorDiv).
    Conflict between rule 43 and token ParLeft resolved as reduce (ParLeft < OperatorDiv).
    Conflict between rule 43 and token OperatorPlus resolved as reduce (OperatorPlus < OperatorDiv).
    Conflict between rule 43 and token OperatorMinus resolved as reduce (OperatorMinus < OperatorDiv).
    Conflict between rule 43 and token OperatorMul resolved as reduce (%left OperatorMul).
    Conflict between rule 43 and token OperatorDiv resolved as reduce (%left OperatorDiv).
    Conflict between rule 43 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorDiv).
    Conflict between rule 43 and token OperatorAnd resolved as reduce (OperatorAnd < OperatorDiv).
    Conflict between rule 43 and token OperatorOr resolved as reduce (OperatorOr < OperatorDiv).
    Conflict between rule 43 and token OperatorMember resolved as shift (OperatorDiv < OperatorMember).
    Conflict between rule 43 and token OperatorAccessL resolved as shift (OperatorDiv < OperatorAccessL).


State 105

   36 Exp: Exp . OperatorAssign Exp
   36    | Exp OperatorAssign Exp .  [ParLeft, ParRight, Semicolon, Comma, OperatorAssign, OperatorAccessR]
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 36 (Exp)

    Conflict between rule 36 and token OperatorRelation resolved as shift (OperatorAssign < OperatorRelation).
    Conflict between rule 36 and token ParLeft resolved as reduce (ParLeft < OperatorAssign).
    Conflict between rule 36 and token OperatorPlus resolved as shift (OperatorAssign < OperatorPlus).
    Conflict between rule 36 and token OperatorMinus resolved as shift (OperatorAssign < OperatorMinus).
    Conflict between rule 36 and token OperatorMul resolved as shift (OperatorAssign < OperatorMul).
    Conflict between rule 36 and token OperatorDiv resolved as shift (OperatorAssign < OperatorDiv).
    Conflict between rule 36 and token OperatorAssign resolved as reduce (%left OperatorAssign).
    Conflict between rule 36 and token OperatorAnd resolved as shift (OperatorAssign < OperatorAnd).
    Conflict between rule 36 and token OperatorOr resolved as shift (OperatorAssign < OperatorOr).
    Conflict between rule 36 and token OperatorMember resolved as shift (OperatorAssign < OperatorMember).
    Conflict between rule 36 and token OperatorAccessL resolved as shift (OperatorAssign < OperatorAccessL).


State 106

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   37    | Exp OperatorAnd Exp .  [ParLeft, ParRight, Semicolon, Comma, OperatorAssign, OperatorAnd, OperatorOr, OperatorAccessR]
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 37 (Exp)

    Conflict between rule 37 and token OperatorRelation resolved as shift (OperatorAnd < OperatorRelation).
    Conflict between rule 37 and token ParLeft resolved as reduce (ParLeft < OperatorAnd).
    Conflict between rule 37 and token OperatorPlus resolved as shift (OperatorAnd < OperatorPlus).
    Conflict between rule 37 and token OperatorMinus resolved as shift (OperatorAnd < OperatorMinus).
    Conflict between rule 37 and token OperatorMul resolved as shift (OperatorAnd < OperatorMul).
    Conflict between rule 37 and token OperatorDiv resolved as shift (OperatorAnd < OperatorDiv).
    Conflict between rule 37 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorAnd).
    Conflict between rule 37 and token OperatorAnd resolved as reduce (%left OperatorAnd).
    Conflict between rule 37 and token OperatorOr resolved as reduce (OperatorOr < OperatorAnd).
    Conflict between rule 37 and token OperatorMember resolved as shift (OperatorAnd < OperatorMember).
    Conflict between rule 37 and token OperatorAccessL resolved as shift (OperatorAnd < OperatorAccessL).


State 107

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   38    | Exp OperatorOr Exp .  [ParLeft, ParRight, Semicolon, Comma, OperatorAssign, OperatorOr, OperatorAccessR]
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAnd       shift, and go to state 76
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79

    $default  reduce using rule 38 (Exp)

    Conflict between rule 38 and token OperatorRelation resolved as shift (OperatorOr < OperatorRelation).
    Conflict between rule 38 and token ParLeft resolved as reduce (ParLeft < OperatorOr).
    Conflict between rule 38 and token OperatorPlus resolved as shift (OperatorOr < OperatorPlus).
    Conflict between rule 38 and token OperatorMinus resolved as shift (OperatorOr < OperatorMinus).
    Conflict between rule 38 and token OperatorMul resolved as shift (OperatorOr < OperatorMul).
    Conflict between rule 38 and token OperatorDiv resolved as shift (OperatorOr < OperatorDiv).
    Conflict between rule 38 and token OperatorAssign resolved as reduce (OperatorAssign < OperatorOr).
    Conflict between rule 38 and token OperatorAnd resolved as shift (OperatorOr < OperatorAnd).
    Conflict between rule 38 and token OperatorOr resolved as reduce (%left OperatorOr).
    Conflict between rule 38 and token OperatorMember resolved as shift (OperatorOr < OperatorMember).
    Conflict between rule 38 and token OperatorAccessL resolved as shift (OperatorOr < OperatorAccessL).


State 108

   49 Exp: Exp OperatorMember Identifier .

    $default  reduce using rule 49 (Exp)


State 109

   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   50    | Exp OperatorAccessL Exp . OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79
    OperatorAccessR   shift, and go to state 119


State 110

   30 Stmt: CondIf ParLeft Exp . ParRight Stmt
   31     | CondIf ParLeft Exp . ParRight Stmt CondElse Stmt
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    ParRight          shift, and go to state 120
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 111

   32 Stmt: LoopWhile ParLeft Exp . ParRight Stmt
   36 Exp: Exp . OperatorAssign Exp
   37    | Exp . OperatorAnd Exp
   38    | Exp . OperatorOr Exp
   39    | Exp . OperatorRelation Exp
   40    | Exp . OperatorPlus Exp
   41    | Exp . OperatorMinus Exp
   42    | Exp . OperatorMul Exp
   43    | Exp . OperatorDiv Exp
   49    | Exp . OperatorMember Identifier
   50    | Exp . OperatorAccessL Exp OperatorAccessR
   51    | Exp . ParLeft Args ParRight
   52    | Exp . ParLeft ParRight

    OperatorRelation  shift, and go to state 68
    ParLeft           shift, and go to state 69
    ParRight          shift, and go to state 121
    OperatorPlus      shift, and go to state 71
    OperatorMinus     shift, and go to state 72
    OperatorMul       shift, and go to state 73
    OperatorDiv       shift, and go to state 74
    OperatorAssign    shift, and go to state 75
    OperatorAnd       shift, and go to state 76
    OperatorOr        shift, and go to state 77
    OperatorMember    shift, and go to state 78
    OperatorAccessL   shift, and go to state 79


State 112

   29 Stmt: Return Exp Semicolon .

    $default  reduce using rule 29 (Stmt)


State 113

   33 Def: Specifier VariableList Semicolon .

    $default  reduce using rule 33 (Def)


State 114

   48 Exp: OperatorAddr ParLeft Exp ParRight .

    $default  reduce using rule 48 (Exp)


State 115

   47 Exp: OperatorDeref ParLeft Exp ParRight .

    $default  reduce using rule 47 (Exp)


State 116

   34 InitList: Exp Comma InitList .

    $default  reduce using rule 34 (InitList)


State 117

   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr
   60 Args: . Exp Comma Args
   60     | Exp Comma . Args
   61     | . Exp

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44

    Exp   go to state 98
    Args  go to state 122


State 118

   51 Exp: Exp ParLeft Args ParRight .

    $default  reduce using rule 51 (Exp)


State 119

   50 Exp: Exp OperatorAccessL Exp OperatorAccessR .

    $default  reduce using rule 50 (Exp)


State 120

   21 StmtBlk: . BlockLeft StmList BlockRight
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   30     | CondIf ParLeft Exp ParRight . Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   31     | CondIf ParLeft Exp ParRight . Stmt CondElse Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    StmtBlk  go to state 52
    Stmt     go to state 123
    Exp      go to state 56


State 121

   21 StmtBlk: . BlockLeft StmList BlockRight
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   32     | LoopWhile ParLeft Exp ParRight . Stmt
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    StmtBlk  go to state 52
    Stmt     go to state 124
    Exp      go to state 56


State 122

   60 Args: Exp Comma Args .

    $default  reduce using rule 60 (Args)


State 123

   30 Stmt: CondIf ParLeft Exp ParRight Stmt .  [LiteralInteger, Identifier, IdentifierType, LiteralFloat, LiteralString, LiteralChar, LiteralNullptr, ParLeft, BlockLeft, BlockRight, OperatorMinus, OperatorNot, CondIf, LoopWhile, Return, OperatorAddr, OperatorDeref, OperatorAccessL, AsArray, AsPointer, LoopBreak, LoopContinue]
   31     | CondIf ParLeft Exp ParRight Stmt . CondElse Stmt

    CondElse  shift, and go to state 125

    $default  reduce using rule 30 (Stmt)

    Conflict between rule 30 and token CondElse resolved as shift (CondIfTrue < CondElse).


State 124

   32 Stmt: LoopWhile ParLeft Exp ParRight Stmt .

    $default  reduce using rule 32 (Stmt)


State 125

   21 StmtBlk: . BlockLeft StmList BlockRight
   25 Stmt: . Exp Semicolon
   26     | . StmtBlk
   27     | . LoopBreak Semicolon
   28     | . LoopContinue Semicolon
   29     | . Return Exp Semicolon
   30     | . CondIf ParLeft Exp ParRight Stmt
   31     | . CondIf ParLeft Exp ParRight Stmt CondElse Stmt
   31     | CondIf ParLeft Exp ParRight Stmt CondElse . Stmt
   32     | . LoopWhile ParLeft Exp ParRight Stmt
   36 Exp: . Exp OperatorAssign Exp
   37    | . Exp OperatorAnd Exp
   38    | . Exp OperatorOr Exp
   39    | . Exp OperatorRelation Exp
   40    | . Exp OperatorPlus Exp
   41    | . Exp OperatorMinus Exp
   42    | . Exp OperatorMul Exp
   43    | . Exp OperatorDiv Exp
   44    | . ParLeft Exp ParRight
   45    | . OperatorMinus Exp
   46    | . OperatorNot Exp
   47    | . OperatorDeref ParLeft Exp ParRight
   48    | . OperatorAddr ParLeft Exp ParRight
   49    | . Exp OperatorMember Identifier
   50    | . Exp OperatorAccessL Exp OperatorAccessR
   51    | . Exp ParLeft Args ParRight
   52    | . Exp ParLeft ParRight
   53    | . OperatorAccessL InitList OperatorAccessR
   54    | . Identifier
   55    | . LiteralInteger
   56    | . LiteralFloat
   57    | . LiteralString
   58    | . LiteralChar
   59    | . LiteralNullptr

    LiteralInteger   shift, and go to state 33
    Identifier       shift, and go to state 34
    LiteralFloat     shift, and go to state 35
    LiteralString    shift, and go to state 36
    LiteralChar      shift, and go to state 37
    LiteralNullptr   shift, and go to state 38
    ParLeft          shift, and go to state 39
    BlockLeft        shift, and go to state 23
    OperatorMinus    shift, and go to state 40
    OperatorNot      shift, and go to state 41
    CondIf           shift, and go to state 46
    LoopWhile        shift, and go to state 47
    Return           shift, and go to state 48
    OperatorAddr     shift, and go to state 42
    OperatorDeref    shift, and go to state 43
    OperatorAccessL  shift, and go to state 44
    LoopBreak        shift, and go to state 49
    LoopContinue     shift, and go to state 50

    StmtBlk  go to state 52
    Stmt     go to state 126
    Exp      go to state 56


State 126

   31 Stmt: CondIf ParLeft Exp ParRight Stmt CondElse Stmt .

    $default  reduce using rule 31 (Stmt)
